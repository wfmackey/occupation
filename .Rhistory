filter(is.2534 == TRUE) %>%
group_by(year, qualfield, gender, occ) %>%
summarise(count = sum(count)) %>%
mutate(pc = count / sum(count))
# Add total bach + dip totals
add <- occ %>% filter(qual != "Y12") %>%
filter(is.2534 == TRUE) %>%
group_by(year, qual, gender, occ) %>%
summarise(count = sum(count)) %>%
mutate(pc = count / sum(count)) %>%
mutate(qualfield = ifelse(qual == "Bachelor", "B. all",
ifelse(qual == "Diploma & AdDip", "D. all", "Y12")))
occ.2534 <- bind_rows(occ.2534, add) %>%
ungroup() %>%
select(-qual) %>%
group_by(year, qualfield, gender, occ)
# Looking at 25-34 year olds, ignoring marriage -- UNIFORM AGE WEIGHTING
occ.2534.uniform <- occ %>%
filter(is.2534 == TRUE) %>%
group_by(year, qualfield, age, gender, occ) %>%
summarise(count = sum(count)) %>%
mutate(temp.pc = count / sum(count)) %>%
ungroup() %>%
group_by(year, qualfield, gender, occ) %>%
summarise(pc = mean(temp.pc, na.rm = TRUE))
add <- occ %>%
filter(is.2534 == TRUE) %>%
group_by(year, qual, age, gender, occ) %>%
summarise(count = sum(count)) %>%
mutate(temp.pc = count / sum(count)) %>%
ungroup() %>%
group_by(year, qual, gender, occ) %>%
summarise(pc = mean(temp.pc, na.rm = TRUE)) %>%
mutate(qualfield = ifelse(qual == "Bachelor", "B. all",
ifelse(qual == "Diploma & AdDip", "D. all", "Y12")))
occ.2534.uniform <- bind_rows(occ.2534.uniform, add) %>%
ungroup() %>%
select(-qual) %>%
group_by(year, qualfield, gender, occ)
# Looking at 25-34 year olds, by marriage -- no uniform age weighting
occ.2534.mar <- occ %>%
filter(is.2534 == TRUE) %>%
group_by(year, qualfield, married, gender, occ) %>%
summarise(count = sum(count)) %>%
mutate(pc = count / sum(count))
# Add total bach + dip totals
add <- occ %>% filter(qual != "Y12") %>%
filter(is.2534 == TRUE) %>%
group_by(year, qual, married, gender, occ) %>%
summarise(count = sum(count)) %>%
mutate(pc = count / sum(count)) %>%
mutate(qualfield = ifelse(qual == "Bachelor", "B. all",
ifelse(qual == "Diploma & AdDip", "D. all", "Y12")))
occ.2534.mar <- bind_rows(occ.2534.mar, add) %>%
ungroup() %>%
select(-qual) %>%
group_by(year, qualfield, married, gender, occ)
# Looking at 25-34 year olds, by marriage -- UNIFORM AGE WEIGHTING
occ.2534.uniform.mar <- occ %>%
filter(is.2534 == TRUE) %>%
group_by(year, qualfield, married, age, gender, occ) %>%
summarise(count = sum(count)) %>%
mutate(temp.pc = count / sum(count)) %>%
ungroup() %>%
group_by(year, qualfield, married, gender, occ) %>%
summarise(pc = mean(temp.pc, na.rm = TRUE))
add <- occ %>%
filter(is.2534 == TRUE) %>%
group_by(year, qual, married, age, gender, occ) %>%
summarise(count = sum(count)) %>%
mutate(temp.pc = count / sum(count)) %>%
ungroup() %>%
group_by(year, qual, married, gender, occ) %>%
summarise(pc = mean(temp.pc, na.rm = TRUE)) %>%
mutate(qualfield = ifelse(qual == "Bachelor", "B. all",
ifelse(qual == "Diploma & AdDip", "D. all", "Y12")))
occ.2534.uniform.mar <- bind_rows(occ.2534.uniform.mar, add) %>%
ungroup() %>%
select(-qual) %>%
group_by(year, qualfield, married, gender, occ)
## Combine into single dataset to enable plotting of any combination
occ.2534 <- mutate(occ.2534, group = "occ.2534")
occ.2534.uniform <- mutate(occ.2534.uniform, group = "occ.2534.uniform")
occ.2534.mar <- mutate(occ.2534.mar, group = "occ.2534.mar")
occ.2534.uniform.mar <- mutate(occ.2534.uniform.mar, group = "occ.2534.uniform.mar")
occ.anyage <- mutate(occ.anyage, group = "occ.anyage")
occ.anyage.uniform <- mutate(occ.anyage.uniform, group = "occ.anyage.uniform")
occ.anyage.mar <- mutate(occ.anyage.mar, group = "occ.anyage.mar")
occ.anyage.uniform.mar <- mutate(occ.anyage.uniform.mar, group = "occ.anyage.uniform.mar")
##Create final product:
occ.combined <- bind_rows(occ.2534, occ.2534.uniform,
occ.2534.mar, occ.2534.uniform.mar,
occ.anyage, occ.anyage.uniform,
occ.anyage.mar, occ.anyage.uniform.mar) %>%
select(-count)
##Create grouping
occ.combined <- occ.combined %>% mutate(code = if_else(is.na(married), gender,
if_else(married == TRUE, paste0(gender,".mar"),
paste0(gender,".unmar"))))
####3 Functions: Defining functions to create LFS and OCC charts####
####3.1: lfs.chart ####
lfs.chart <- function(age = "all",
uniform = TRUE,
level = "bach",
pair = c("m.mar", "f"),
chartfields = fields,
display = TRUE) {
pair <- sort(pair)
pairlabel <- c("", "")
for (x in 1:2) {
if (pair[x] == "m") {
pairlabel[x] <- c("Male")
}
if (pair[x] == "f") {
pairlabel[x] <- c("Female")
}
if (pair[x] == "f.nochild") {
pairlabel[x] <- c("Female, no child")
}
if (pair[x] == "f.haschild") {
pairlabel[x] <- c("Female, has child")
}
if (pair[x] == "m.mar") {
pairlabel[x] <- c("Male, married")
}
if (pair[x] == "f.mar") {
pairlabel[x] <- c("Female, married")
}
if (pair[x] == "f.nochild.mar") {
pairlabel[x] <- c("Female married no child")
}
if (pair[x] == "f.haschild.mar") {
pairlabel[x] <- c("Female married has child")
}
if (pair[x] == "m.unmar") {
pairlabel[x] <- c("Male, unmarried")
}
if (pair[x] == "f.unmar") {
pairlabel[x] <- c("Female, unmarried")
}
if (pair[x] == "f.nochild.unmar") {
pairlabel[x] <- c("Female unmarried no child")
}
if (pair[x] == "f.haschild.unmar") {
pairlabel[x] <- c("Female unmarried has child")
}
}
if(age == "2534") {
if(uniform == TRUE) {
usedata <- lfs.combined %>% filter(grepl('lfs.2534.uniform', group))
print("using lfs.2534.uniform")
title <- paste0("Labour force status of (", pairlabel[1],") & (", pairlabel[2], "), 25-34 year olds (uniform age-weighted)")
}
else {
usedata <- lfs.combined %>% filter(grepl('lfs.2534', group),
!grepl('lfs.2534.uniform', group))
print("using lfs.2534")
title <- paste0("Labour force status of (", pairlabel[1],") & (", pairlabel[2], "), 25-34 year olds")
}
} else {
if(uniform == TRUE) {
usedata <- lfs.combined %>% filter(grepl('lfs.anyage.uniform', group))
print("using lfs.anyage.uniform")
title <- paste0("Labour force status of [", pairlabel[1],"] and [", pairlabel[2], "], 18-65 year olds (uniform age-weighted)")
} else {
usedata <- lfs.combined %>% filter(grepl('lfs.anyage', group),
!grepl('lfs.anyage.uniform', group))
print("using lfs.anyage")
title <- paste0("Labour force status of [", pairlabel[1],"] and [", pairlabel[2], "], 18-65 year olds")
}
}
# If both dip and bach (will be overridden if either dip or bach)
subtitle <- "B. = bachelor;  D. = diploma"
facetcol <- ceiling(length(fields))/2
if(level == "dip") {
usedata <- filter(usedata, !grepl('B.', qualfield ))
# usedata <- filter(usedata, str_detect(qualfield, 'D. '))
subtitle <- "D.  = diploma"
facetcol <- ceiling(length(fields))/2 + 1
}
if(level == "bach") {
usedata <- filter(usedata, !grepl('D.', qualfield ))
subtitle <- "B.  = bachelor"
facetcol <- ceiling(length(fields))/2 + 1
}
lfs.current.chart <- usedata %>%
filter(code == pair[1] | code == pair[2]) %>%
arrange(code) %>%
filter(qualfield %in% chartfields) %>%
ggplot(aes(x = year, color=lfs, group=interaction(lfs, code))) +
geom_line(aes(y = pc, linetype = code), stat="identity") +
geom_point(aes(y = pc), stat="identity") +
theme_minimal() +
labs(title = title,
subtitle = subtitle,
x = "",
y = ""
) +
theme(plot.title    = element_text(size = 12, hjust = 0.5),
plot.subtitle = element_text(size = 10, hjust = 0.5, face = "italic"),
legend.position="bottom",
legend.title = element_blank(),
legend.text = element_text(size=8),
strip.text.x = element_text(size = 10, colour = "black"),
axis.text.x=element_text(size=8, angle = 90),
panel.grid.major.x=element_blank()
) +
scale_y_continuous(breaks = seq(0, 1, .1),
minor_breaks = seq(0 , 1, .05)) +
scale_color_manual(labels = lfs.labels,
values =  lfs.colors) +
scale_linetype_manual(labels = pairlabel,
values = c("solid", "dotted")) +
facet_wrap(. ~ qualfield, ncol= facetcol,
labeller = label_wrap_gen(width = 10)) +
NULL
if (display == TRUE) plot(lfs.current.chart)
current.chart.name <- paste0("lfs_",age,"age_",level,"level_",pair[1],"_",pair[2],".pdf")
ggsave(current.chart.name, plot = last_plot(), device = "pdf", path = "plots",
scale = 1, width = 297, height = 210, units = "mm",
dpi = 320, limitsize = TRUE)
}
####3.2: occ.chart ####
occ.chart <- function(age = "all",
uniform = TRUE,
level = "bach",
pair = c("m.mar", "f"),
chartfields = fields,
display = TRUE) {
pair <- sort(pair)
pairlabel <- c("", "")
for (x in 1:2) {
if (pair[x] == "m") {
pairlabel[x] <- c("Male")
}
if (pair[x] == "f") {
pairlabel[x] <- c("Female")
}
if (pair[x] == "f.nochild") {
pairlabel[x] <- c("Female, no child")
}
if (pair[x] == "f.haschild") {
pairlabel[x] <- c("Female, has child")
}
if (pair[x] == "m.mar") {
pairlabel[x] <- c("Male, married")
}
if (pair[x] == "f.mar") {
pairlabel[x] <- c("Female, married")
}
if (pair[x] == "f.nochild.mar") {
pairlabel[x] <- c("Female married no child")
}
if (pair[x] == "f.haschild.mar") {
pairlabel[x] <- c("Female married has child")
}
if (pair[x] == "m.unmar") {
pairlabel[x] <- c("Male, unmarried")
}
if (pair[x] == "f.unmar") {
pairlabel[x] <- c("Female, unmarried")
}
if (pair[x] == "f.nochild.unmar") {
pairlabel[x] <- c("Female unmarried no child")
}
if (pair[x] == "f.haschild.unmar") {
pairlabel[x] <- c("Female unmarried has child")
}
}
if(age == "2534") {
if(uniform == TRUE) {
usedata <- occ.combined %>% filter(grepl('occ.2534.uniform', group))
print("using occ.2534.uniform")
title <- paste0("Occupations of of (", pairlabel[1],") & (", pairlabel[2], "), 25-34 year olds (uniform age-weighted)")
}
else {
usedata <- occ.combined %>% filter(grepl('occ.2534', group),
!grepl('occ.2534.uniform', group))
print("using occ.2534")
title <- paste0("Occupations of of (", pairlabel[1],") & (", pairlabel[2], "), 25-34 year olds")
}
} else {
if(uniform == TRUE) {
usedata <- occ.combined %>% filter(grepl('occ.anyage.uniform', group))
print("using occ.anyage.uniform")
title <- paste0("Occupations of of [", pairlabel[1],"] and [", pairlabel[2], "], 18-65 year olds (uniform age-weighted)")
} else {
usedata <- occ.combined %>% filter(grepl('occ.anyage', group),
!grepl('occ.anyage.uniform', group))
print("using occ.anyage")
title <- paste0("Occupations of of [", pairlabel[1],"] and [", pairlabel[2], "], 18-65 year olds")
}
}
# If both dip and bach (will be overridden if either dip or bach)
subtitle <- "B. = bachelor;  D. = diploma"
facetcol <- ceiling(length(fields))/2
if(level == "dip") {
usedata <- filter(usedata, !grepl('B.', qualfield ))
# usedata <- filter(usedata, str_detect(qualfield, 'D. '))
subtitle <- "D.  = diploma"
facetcol <- ceiling(length(fields))/2 + 1
}
if(level == "bach") {
usedata <- filter(usedata, !grepl('D.', qualfield ))
subtitle <- "B.  = bachelor"
facetcol <- ceiling(length(fields))/2 + 1
}
occ.current.chart <- usedata %>%
filter(code == pair[1] | code == pair[2]) %>%
arrange(code) %>%
filter(qualfield %in% chartfields) %>%
ggplot(aes(x = year, color=occ, group=interaction(occ, code))) +
geom_line(aes(y = pc, linetype = code), stat="identity") +
geom_point(aes(y = pc), stat="identity") +
theme_minimal() +
labs(title = title,
subtitle = subtitle,
x = "",
y = ""
) +
theme(plot.title    = element_text(size = 12, hjust = 0.5),
plot.subtitle = element_text(size = 10, hjust = 0.5, face = "italic"),
legend.position="bottom",
legend.title = element_blank(),
legend.text = element_text(size=8),
strip.text.x = element_text(size = 10, colour = "black"),
axis.text.x=element_text(size=8, angle = 90),
panel.grid.major.x=element_blank()
) +
scale_y_continuous(breaks = seq(0, 1, .1),
minor_breaks = seq(0 , 1, .05)) +
scale_color_manual(labels = occ.labels,
values =  occ.colors) +
scale_linetype_manual(labels = pairlabel,
values = c("solid", "dotted")) +
facet_wrap(. ~ qualfield, ncol= facetcol,
labeller = label_wrap_gen(width = 10)) +
NULL
if (display == TRUE) plot(occ.current.chart)
current.chart.name <- paste0("occ_",age,"age_",level,"level_",pair[1],"_",pair[2],".pdf")
ggsave(current.chart.name, plot = last_plot(), device = "pdf", path = "plots",
scale = 1, width = 297, height = 210, units = "mm",
dpi = 320, limitsize = TRUE)
}
####4: Plotting####
# Fields, default (noting that these can be changed within lfs.chart options)
fields <- c("Y12",
"B. Science (excl maths)",
"B. IT",
"B. Engineering",
"B. Other health",
"B. Medicine",
"B. Nursing",
"B. Education",
"B. Commerce",
"B. Humanities",
"B. Law",
"B. Performing Arts",
"D. Science (excl maths)",
"D. IT",
"D. Engineering",
"D. Other health",
"D. Nursing",
"D. Education",
"D. Commerce",
"D. Humanities",
"D. Law",
"D. Performing Arts",
"B. all",
"D. all")
#### 4.1: LFS Charts ####
#Settings
lfs.labels = c( "Employed FT",
"Employed PT",
"Employed AWAY",
"NILF",
"Unemployed")
lfs.colors = c( gred,
gorange,
gblack,
ggrey,
gyellow)
# reminder: lfs.chart syntax, noting that uniform can only be used on 25-34
# lfs.chart(age = "all", uniform = FALSE, level = "bach", pair = c("m.", "f."))
# All pairs of codes:
allpairs <- combn(unique(lfs.combined$code),2)
# Create all possible permutations:
for (age in c("all", "2534")) {
for (level in c("bach", "dip", "all")) {
for (x in 1:ncol(allpairs)) {
lfs.chart(age = age,
level = level,
pair = c(allpairs[1,x], allpairs[2,x]),
display = FALSE)
}
}
}
#### 4.2: OCC Charts ####
#Settings
occ.labels = c( "Manager/prof.",
"Tech/trade",
"Sales/admin/service",
"Labourer/machine",
"Not working")
occ.colors = c( gorange,
gdark,
gred,
gdarkest,
ggrey)
# Generate all pairs
allpairs <- combn(unique(occ.combined$code),2)
# Create all possible permutations:
for (age in c("all", "2534")) {
for (level in c("bach", "dip", "all")) {
for (x in 1:ncol(allpairs)) {
occ.chart(age = age,
level = level,
pair = c(allpairs[1,x], allpairs[2,x]),
display = FALSE)
}
}
}
for(agel in seq(from=25, to=55, by=10)){
ageu = agel + 9
print(agey)
print(ageu)
}
for(agel in seq(from=25, to=55, by=10)){
ageu = agel + 9
print(agel)
print(ageu)
}
##By age group: 25-34, 35-44, ..., 55-64 year olds##
for(agel in seq(from=25, to=55, by=10)){
ageu = agel + 9
assign(print0("lfs.",agel,agel),
lfs %>%
filter(age >= agel & age <= ageu) %>%
group_by(year, qualfield, gender, lfs) %>%
summarise(count = sum(count)) %>%
mutate(pc = count / sum(count))
)
}
##By age group: 25-34, 35-44, ..., 55-64 year olds##
for(agel in seq(from=25, to=55, by=10)){
ageu = agel + 9
assign(paste0("lfs.",agel,agel),
lfs %>%
filter(age >= agel & age <= ageu) %>%
group_by(year, qualfield, gender, lfs) %>%
summarise(count = sum(count)) %>%
mutate(pc = count / sum(count))
)
}
##By age group: 25-34, 35-44, ..., 55-64 year olds##
for(agel in seq(from=25, to=55, by=10)){
##By age group: 25-34, 35-44, ..., 55-64 year olds##
for(agel in seq(from=25, to=55, by=10)){
for(agel in seq(from=25, to=55, by=10)){
ageu = agel + 9
# Ignoring marriage; no uniform age weighting
a <- lfs %>%
filter(age >= agel & age <= ageu) %>%
group_by(year, qualfield, gender, lfs) %>%
summarise(count = sum(count)) %>%
mutate(pc = count / sum(count))
# Add total bach + dip totals
b <- lfs %>% filter(qual != "Y12") %>%
filter(age >= agel & age <= ageu) %>%
group_by(year, qual, gender, lfs) %>%
summarise(count = sum(count)) %>%
mutate(pc = count / sum(count)) %>%
mutate(qualfield = ifelse(qual == "Bachelor", "B. all",
ifelse(qual == "Diploma & AdDip", "D. all", "Y12")))
#Combine rows
assign(print0("lfs.",agel,agel),
bind_rows(a, b) %>%
ungroup() %>%
select(-qual) %>%
group_by(year, qualfield, gender, lfs) %>%
mutate(group = paste0("lfs.",agel,ageu))
)
# Ignoring marriage -- UNIFORM AGE WEIGHTING
a <- lfs %>%
filter(age >= agel & age <= ageu) %>%
group_by(year, qualfield, age, gender, lfs) %>%
summarise(count = sum(count)) %>%
mutate(temp.pc = count / sum(count)) %>%
ungroup() %>%
group_by(year, qualfield, gender, lfs) %>%
summarise(pc = mean(temp.pc, na.rm = TRUE))
# Add total bach + dip totals
b <- lfs %>%
filter(age >= agel & age <= ageu) %>%
group_by(year, qual, age, gender, lfs) %>%
summarise(count = sum(count)) %>%
mutate(temp.pc = count / sum(count)) %>%
ungroup() %>%
group_by(year, qual, gender, lfs) %>%
summarise(pc = mean(temp.pc, na.rm = TRUE)) %>%
mutate(qualfield = ifelse(qual == "Bachelor", "B. all",
ifelse(qual == "Diploma & AdDip", "D. all", "Y12")))
#Combine rows
assign(print0("lfs.",agel,agel,".uniform"),
bind_rows(a, b) %>%
ungroup() %>%
select(-qual) %>%
group_by(year, qualfield, gender, lfs) %>%
mutate(group = paste0("lfs.",agel,ageu))
)
}
View(lfs.3535)
